{"version":3,"sources":["services/firebase.js","helpers/auth.js","components/Header/Header.js","components/Footer/Footer.js","pages/Home/Home.js","components/Loader/Footer.js","pages/Chat/Chat.js","pages/Forms/Signup.js","pages/Forms/Login.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","storageBucket","auth","db","database","storage","uploadImage","user","file","a","imageRef","ref","uid","name","put","getDownloadURL","catch","error","url","signup","email","password","displayName","createUserWithEmailAndPassword","currentUser","avatar","updateProfile","photoURL","signin","signInWithEmailAndPassword","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","signInWithGitHub","GithubAuthProvider","Header","className","to","alt","src","onClick","signOut","Footer","HomePage","Loader","dark","Chat","props","state","chats","content","readError","writeError","loadingChats","handleChange","bind","handleSubmit","myRef","React","createRef","this","setState","chatArea","current","on","snapshot","forEach","snap","push","val","sort","b","timestamp","scrollBy","scrollHeight","message","event","target","value","preventDefault","Date","now","d","getDate","getMonth","getFullYear","getHours","getMinutes","map","chat","index","formatTime","onSubmit","type","placeholder","onChange","Component","SignUp","useState","setError","setEmail","setDisplayName","setAvatar","setPassword","files","googleSignIn","githubSignIn","autoComplete","Login","PrivateRoute","component","authenticated","rest","render","pathname","from","location","PublicRoute","App","setAuthenticated","loading","setLoading","useEffect","onAuthStateChanged","exact","path","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.bdfade25.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport 'firebase/storage';\n\nconst config = {\n    apiKey: \"AIzaSyA0c4AngClsnqXDPQqoxhD9mVYgQom-65I\",\n    authDomain: \"private-chat-edd81.firebaseapp.com\",\n    databaseURL: \"https://private-chat-edd81.firebaseio.com\",\n    storageBucket: \"private-chat-edd81.appspot.com\"\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth;\nexport const db = firebase.database();\nexport const storage = firebase.storage();\n","import { auth, storage } from \"../services/firebase\";\n\nconst uploadImage = async (user, file) => {\n    const imageRef = storage.ref(user.uid + '/profilePicture/' + file.name);\n\n    await imageRef.put(file);\n\n    const url = await imageRef.getDownloadURL().catch((error) => {\n        throw error\n    });\n\n    return url\n};\n\nexport const signup = async (email, password, displayName, file) => {\n    await auth().createUserWithEmailAndPassword(email, password);\n\n    const user = auth().currentUser;\n\n    const avatar = await uploadImage(user, file);\n\n    return user.updateProfile({\n        displayName: displayName,\n        photoURL: avatar\n    });\n};\n\nexport const signin = (email, password) => auth().signInWithEmailAndPassword(email, password);\n\nexport const signInWithGoogle = () => {\n    const provider = new auth.GoogleAuthProvider();\n    return auth().signInWithPopup(provider);\n};\n\nexport const signInWithGitHub = () => {\n    const provider = new auth.GithubAuthProvider();\n    return auth().signInWithPopup(provider);\n};\n\nexport const logout = () => auth().signOut();\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { auth } from '../../services/firebase';\nimport { logout } from \"../../helpers/auth\";\n\nimport './styles.scss';\n\nconst Header = () => {\n    return (\n        <header className='cmp-header'>\n            <nav className='cmp-header__nav'>\n                <Link className='cmp-header__nav--link' to='/'>Private Chat</Link>\n                <div className='cmp-header__nav__profile'>\n                    { auth().currentUser\n                    && <>\n                        <img className='cmp-header__nav__profile--avatar' alt='profilePicture' src={ auth().currentUser.photoURL }/>\n                        <button onClick={ () => logout() }>Logout</button>\n                    </>\n                    }\n                </div>\n            </nav>\n        </header>\n    );\n};\n\nexport default Header;\n","import React from 'react';\n\nimport './styles.scss';\n\nconst Footer = () => {\n    return (\n        <footer className=\"cmp-footer\">\n            <div className=\"cmp-footer--paragraph\">\n                <p>&copy; Private Chat 2020.</p>\n            </div>\n        </footer>\n    )\n};\n\nexport default Footer;\n","import React from 'react';\nimport Header from '../../components/Header/Header';\nimport Footer from '../../components/Footer/Footer';\nimport { Link } from 'react-router-dom';\n\nimport './styles.scss';\n\nexport const HomePage = () => {\n    return (\n        <div className='cmp-home'>\n            <Header/>\n            <section className='cmp-home__content'>\n                <h1 className='cmp-home__content--title'>Welcome to Private Chat</h1>\n                <p className='cmp-home__content--paragraph'>A great place to share your thoughts with friends</p>\n                <div className='cmp-home__content__links'>\n                    <Link className='cmp-home__content__links--signup' to='/signup'>Create New Account</Link>\n                    <Link className='cmp-home__content__links--signin' to='/login'>Login to Your Account</Link>\n                </div>\n            </section>\n            <Footer/>\n        </div>\n    )\n};\n","import React from 'react';\n\nimport './styles.scss';\n\nexport const Loader = ({ dark }) => {\n    return (\n        <div className=\"cmp-loader\">\n            <div className={ `spinner ${ dark ? 'dark' : '' }` }/>\n        </div>\n    )\n};\n","import React, { Component } from \"react\";\nimport { auth, db } from \"../../services/firebase\";\n\nimport Header from \"../../components/Header/Header\";\nimport { Loader } from \"../../components/Loader/Footer\";\n\nimport './styles.scss';\n\nexport class Chat extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: auth().currentUser,\n            chats: [],\n            content: '',\n            readError: null,\n            writeError: null,\n            loadingChats: false\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.myRef = React.createRef();\n    }\n\n    async componentDidMount() {\n        this.setState({ readError: null, loadingChats: true });\n\n        const chatArea = this.myRef.current;\n\n        try {\n            db.ref(\"chats\").on(\"value\", snapshot => {\n                let chats = [];\n\n                snapshot.forEach((snap) => {\n                    chats.push(snap.val());\n                });\n\n                chats.sort(function (a, b) {\n                    return a.timestamp - b.timestamp\n                });\n\n                this.setState({ chats });\n                this.setState({ loadingChats: false });\n\n                chatArea.scrollBy(0, chatArea.scrollHeight);\n            });\n        } catch (error) {\n            this.setState({ readError: error.message, loadingChats: false });\n        }\n    }\n\n    handleChange(event) {\n        this.setState({\n            content: event.target.value\n        });\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n\n        this.setState({ writeError: null });\n        const chatArea = this.myRef.current;\n\n        try {\n            await db.ref(\"chats\").push({\n                content: this.state.content,\n                timestamp: Date.now(),\n                uid: this.state.user.uid,\n                displayName: this.state.user.displayName,\n                avatar: this.state.user.photoURL\n            });\n            this.setState({ content: '' });\n            chatArea.scrollBy(0, chatArea.scrollHeight);\n        } catch (error) {\n            this.setState({ writeError: error.message });\n        }\n    }\n\n    formatTime(timestamp) {\n        const d = new Date(timestamp);\n\n        return `${ d.getDate() }/${ (d.getMonth() + 1) }/${ d.getFullYear() } ${ d.getHours() }:${ d.getMinutes() }`;\n    }\n\n    render() {\n        return (\n            <>\n                <Header/>\n                <div className='cmp-chat' ref={ this.myRef }>\n                    {/* loading indicator */ }\n                    { this.state.loadingChats ?\n                        <Loader/> : \"\" }\n                    {/* chat area */ }\n                    { this.state.chats.map((chat, index) => {\n                        return <div key={ index }\n                                    className={ 'cmp-chat--item ' + (this.state.user.uid === chat.uid ? \"current-user\" : \"\") }>\n                            <div className='cmp-chat--item__content'>\n                                <span className='cmp-chat--item__content--paragraph'>\n                                    { this.state.user.uid !== chat.uid && (\n                                        <>\n                                            <img className='cmp-chat--item__content--avatar' alt='avatar'\n                                                 src={ chat.avatar }/>\n                                            <span\n                                                className='cmp-chat--item__content--sender'>{ chat.displayName }</span>\n                                        </>) }\n                                    { chat.content }\n                                </span>\n                                <span className='cmp-chat--time'>{ this.formatTime(chat.timestamp) }</span>\n                            </div>\n                        </div>\n                    }) }\n                </div>\n                <form onSubmit={ this.handleSubmit } className='cmp-chat--form'>\n                    <input name='content' type='text' placeholder='Your Text' onChange={ this.handleChange }\n                           value={ this.state.content }/>\n                    { this.state.readError ? <p>{ this.state.readError }</p> : null }\n                    <button type='submit'>Send</button>\n                </form>\n            </>\n        );\n    }\n}\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { signInWithGitHub, signInWithGoogle, signup } from \"../../helpers/auth\";\n\nexport const SignUp = () => {\n\n    const [error, setError] = useState(null);\n    const [email, setEmail] = useState('');\n    const [displayName, setDisplayName] = useState('');\n    const [avatar, setAvatar] = useState({});\n    const [password, setPassword] = useState('');\n\n    const handleChange = event => {\n        event.target.name === 'email' && setEmail(event.target.value);\n        event.target.name === 'password' && setPassword(event.target.value);\n        event.target.name === 'displayName' && setDisplayName(event.target.value);\n        event.target.name === 'avatar' && setAvatar(event.target.files[0]);\n    };\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n        setError('');\n\n        try {\n            await signup(email, password, displayName, avatar);\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n\n    const googleSignIn = async () => {\n        try {\n            await signInWithGoogle();\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n\n    const githubSignIn = async () => {\n        try {\n            await signInWithGitHub();\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n\n    return (\n        <div className='cmp-form'>\n            <form\n                className='cmp-form__container'\n                autoComplete='off'\n                onSubmit={ handleSubmit }\n            >\n                <h1 className='cmp-form__container--title'>\n                    Sign up to\n                    <Link to='/'>\n                        Private Chat\n                    </Link>\n                </h1>\n                <p className='cmp-form__container--paragraph'>\n                    Fill in the form below to register an account.\n                </p>\n                <input\n                    className='cmp-form__container--input'\n                    placeholder='Email'\n                    name='email'\n                    type='email'\n                    onChange={ handleChange }\n                    value={ email }\n                />\n                <input\n                    className='cmp-form__container--input'\n                    placeholder='Display Name'\n                    name='displayName'\n                    type='text'\n                    onChange={ handleChange }\n                    value={ displayName }\n                />\n                <input\n                    className='cmp-form__container--input'\n                    placeholder='Password'\n                    name='password'\n                    onChange={ handleChange }\n                    value={ password }\n                    type='password'\n                />\n                <input\n                    className='cmp-form__container--input'\n                    placeholder='Avatar'\n                    name='avatar'\n                    onChange={ handleChange }\n                    type='file'\n                />\n                <>\n                    { error ? (\n                        <p className='cmp-form__container--paragraph'>{ error }</p>\n                    ) : null }\n                    <div className='cmp-form__container--submit'>\n                        <button type='submit'>Sign up</button>\n                    </div>\n                </>\n                <p className='cmp-form__container--paragraph'>You can also sign up with any of these services</p>\n                <button type='button' onClick={ googleSignIn }>\n                    Sign up with Google\n                </button>\n                <button type='button' onClick={ githubSignIn }>\n                    Sign up with GitHub\n                </button>\n                <hr/>\n                <p>\n                    Already have an account? <Link to='/login'>Sign in</Link>\n                </p>\n            </form>\n        </div>\n    )\n};\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { signin, signInWithGitHub, signInWithGoogle } from \"../../helpers/auth\";\n\nimport './styles.scss';\n\nexport const Login = () => {\n    const [error, setError] = useState(null);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleChange = event => {\n        event.target.name === 'email' && setEmail(event.target.value);\n        event.target.name === 'password' && setPassword(event.target.value);\n    };\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n\n        setError('');\n\n        try {\n            await signin(email, password);\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n\n    const googleSignIn = async () => {\n        try {\n            await signInWithGoogle();\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n\n    const githubSignIn = async () => {\n        try {\n            await signInWithGitHub();\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n\n    return (\n        <div className='cmp-form'>\n            <form\n                className='cmp-form__container'\n                autoComplete='off'\n                onSubmit={ handleSubmit }\n            >\n                <h1 className='cmp-form__container--title'>\n                    Login to\n                    <Link className='' to='/'>\n                        Private Chat\n                    </Link>\n                </h1>\n                <p className='cmp-form__container--paragraph'>\n                    Fill in the form below to login to your account.\n                </p>\n                <input\n                    className='cmp-form__container--input'\n                    placeholder='Email'\n                    name='email'\n                    type='email'\n                    onChange={ handleChange }\n                    value={ email }\n                />\n                <input\n                    className='cmp-form__container--input'\n                    placeholder='Password'\n                    name='password'\n                    onChange={ handleChange }\n                    value={ password }\n                    type='password'\n                />\n                <>\n                    { error ? (\n                        <p className='cmp-form__container--paragraph'>{ error }</p>\n                    ) : null }\n                    <div className='cmp-form__container--submit'>\n                        <button type='submit'>Login</button>\n                    </div>\n                </>\n                <p className='cmp-form__container--paragraph'>You can also log in with any of these services</p>\n                <button type='button' onClick={ googleSignIn }>\n                    Sign in with Google\n                </button>\n                <button type='button' onClick={ githubSignIn }>\n                    Sign in with GitHub\n                </button>\n                <hr/>\n                <p>\n                    Don't have an account? <Link to='/signup'>Sign up</Link>\n                </p>\n            </form>\n        </div>\n    );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport { HomePage } from \"./pages/Home/Home\";\nimport { Chat } from \"./pages/Chat/Chat\";\nimport { SignUp } from \"./pages/Forms/Signup\";\nimport { Login } from \"./pages/Forms/Login\";\nimport { auth } from \"./services/firebase\";\nimport './styles.scss';\nimport { Loader } from \"./components/Loader/Footer\";\n\nconst PrivateRoute = ({ component: Component, authenticated, ...rest }) => {\n    return (\n        <Route\n            { ...rest }\n            render={ props =>\n                authenticated === true ? (\n                    <Component { ...props } />\n                ) : (\n                    <Redirect\n                        to={ { pathname: \"/login\", state: { from: props.location } } }\n                    />\n                )\n            }\n        />\n    );\n};\n\nconst PublicRoute = ({ component: Component, authenticated, ...rest }) => {\n    return (\n        <Route\n            { ...rest }\n            render={ props =>\n                authenticated === false ? (\n                    <Component { ...props } />\n                ) : (\n                    <Redirect to=\"/chat\"/>\n                )\n            }\n        />\n    );\n};\n\nconst App = () => {\n    const [authenticated, setAuthenticated] = useState(false);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        auth().onAuthStateChanged(user => {\n            if (user) {\n                setAuthenticated(true);\n                setLoading(false);\n            } else {\n                setAuthenticated(false);\n                setLoading(false);\n            }\n        });\n    });\n\n    return loading === true ? (\n        <Loader dark/>\n    ) : (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\" component={ HomePage }/>\n                <PrivateRoute\n                    path=\"/chat\"\n                    authenticated={ authenticated }\n                    component={ Chat }\n                />\n                <PublicRoute\n                    path=\"/signup\"\n                    authenticated={ authenticated }\n                    component={ SignUp }\n                />\n                <PublicRoute\n                    path=\"/login\"\n                    authenticated={ authenticated }\n                    component={ Login }\n                />\n            </Switch>\n        </Router>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App/>, rootElement);\n"],"sourceRoot":""}